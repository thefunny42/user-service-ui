# Default values for userserviceui.

replicaCount: 3

image:
  repository: ghcr.io/thefunny42/user-service-ui
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsUser: 101
  runAsGroup: 101

securityContext:
  capabilities:
    drop:
      - ALL
    # This is for telepresence
    add:
      - NET_ADMIN
      - NET_BIND_SERVICE
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101

service:
  type: ClusterIP
  port: 4200

resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

istio:
  ingressGateway: "{{ .Release.Name }}-ingress-gateway"

authservice:
  sessionTTL: 1200

userservice:
  jwksUrl: "http://{{ .Release.Name}}-authservice:8000/.well-known/jwks.json"
